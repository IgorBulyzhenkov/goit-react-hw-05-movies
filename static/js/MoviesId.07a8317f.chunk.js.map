{"version":3,"file":"static/js/MoviesId.07a8317f.chunk.js","mappings":"iMACA,GAAgB,IAAM,sBAAsB,KAAO,uBAAuB,KAAO,uBAAuB,IAAM,sBAAsB,KAAO,uBAAuB,UAAY,4BAA4B,KAAO,uBAAuB,WAAa,6BAA6B,KAAO,uBAAuB,KAAO,uBAAuB,UAAY,6B,0DCWlVA,EAA0BC,EAAAA,EAAAA,KAApBC,EAAoBD,EAAAA,EAAAA,QAAXE,EAAWF,EAAAA,EAAAA,OAElC,SAASG,IACP,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,UAAS,IAA/B,eAAOG,EAAP,KAAYC,EAAZ,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAuBL,EAAOM,SAC3BC,MAAK,SAAAC,GAAG,OAAIb,EAAQa,MACpBC,OAAM,SAAAb,GAAG,OAAIC,EAAOD,EAAIc,cAC1B,CAACV,EAAOM,UAEX,IAGQK,EAAuDjB,EAAvDiB,OAAQC,EAA+ClB,EAA/CkB,aAAcC,EAAiCnB,EAAjCmB,MAAOC,EAA0BpB,EAA1BoB,SAAUC,EAAgBrB,EAAhBqB,YAE/C,OACE,8BACInB,GA6DA,eAAGoB,UAAWC,EAAAA,UAAd,0LAA6DrB,MA5D7D,iCACE,mBAAQsB,KAAK,SAASC,QATV,WAClBjB,EAASJ,EAASsB,MAAMC,KAAM,CAAEC,SAAS,KAQSN,UAAWC,EAAAA,IAAvD,sBAGA,gBAAKD,UAAWC,EAAAA,KAAhB,UACE,gBACEM,IACER,EAAW,yCAC2BA,GAClC,uFAENS,IAAG,UAAKX,EAAL,qBAAuBA,EAAvB,iBACHY,MAAM,MACNT,UAAWC,EAAAA,SAGf,iBAAKD,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,KAAf,SAAwBJ,KACxB,eAAGG,UAAWC,EAAAA,MAAd,yBAAmD,GAAfL,EAApC,QACA,gBAAII,UAAWC,EAAAA,KAAf,WACE,2BACE,eAAID,UAAWC,EAAAA,UAAf,uBACA,uBAAIH,QAEN,gBAAIE,UAAWC,EAAAA,KAAf,WACE,cAAGD,UAAWC,EAAAA,KAAd,qBACA,eAAID,UAAWC,EAAAA,WAAf,gBACGN,QADH,IACGA,OADH,EACGA,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACX,wBAAcD,GAALC,eAKjB,cAAGZ,UAAWC,EAAAA,KAAd,qCACA,gBAAKD,UAAWC,EAAAA,OAAhB,UACE,gBAAID,UAAWC,EAAAA,WAAf,WACE,eAAID,UAAWC,EAAAA,UAAf,UACE,SAAC,KAAD,CACEY,GAAE,UAAKtC,EAAL,YAAeS,EAAOM,QAAtB,YAAiClB,GACnCgC,MAAO,CAAE7B,OAAAA,EAAQ8B,KAAMvB,EAASsB,MAAMC,MACtCL,UAAWC,EAAAA,KAHb,qBAQF,yBACE,SAAC,KAAD,CACEY,GAAE,UAAKtC,EAAL,YAAeS,EAAOM,QAAtB,YAAiChB,GACnC8B,MAAO,CAAE7B,OAAAA,EAAQ8B,KAAMvB,EAASsB,MAAMC,MACtCL,UAAWC,EAAAA,KAHb,6BAUN,SAAC,KAAD,YAUZ,OAAea,EAAAA,EAAAA,MAAKtC","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/MoviesId.module.css?6ae1","components/Movies/MoviesId.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MoviesId_btn__iBEZt\",\"list\":\"MoviesId_list__iPYVs\",\"card\":\"MoviesId_card__suyFe\",\"img\":\"MoviesId_img__ExIG6\",\"name\":\"MoviesId_name__UfriV\",\"name_over\":\"MoviesId_name_over__Ivnw1\",\"item\":\"MoviesId_item__7JsEV\",\"listGenras\":\"MoviesId_listGenras__kxxxm\",\"text\":\"MoviesId_text__Re1S0\",\"link\":\"MoviesId_link__IHhy0\",\"title_err\":\"MoviesId_title_err__g29m6\"};","import s from './MoviesId.module.css';\nimport {\n  Outlet,\n  useLocation,\n  useParams,\n  useNavigate,\n  Link,\n} from 'react-router-dom';\nimport { useState, useEffect, memo } from 'react';\nimport { FetchInformationMovies } from 'service/FetchMovies';\nimport { constans } from 'helpers/constans';\n\nconst { cast, reviews, movies } = constans;\n\nfunction MoviesId() {\n  const [post, setPost] = useState([]);\n  const [err, setErr] = useState('');\n  const location = useLocation();\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    FetchInformationMovies(params.movieId)\n      .then(res => setPost(res))\n      .catch(err => setErr(err.message));\n  }, [params.movieId]);\n\n  const handleClick = () => {\n    navigate(location.state.from, { replace: false });\n  };\n  const { genres, vote_average, title, overview, poster_path } = post;\n\n  return (\n    <>\n      {!err ? (\n        <>\n          <button type=\"button\" onClick={handleClick} className={s.btn}>\n            Go back\n          </button>\n          <div className={s.card}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://upload.wikimedia.org/wikipedia/commons/b/ba/No_image_available_400_x_600.svg'\n              }\n              alt={`${title} !== '' ? ${title} : 'No info!'`}\n              width=\"300\"\n              className={s.img}\n            />\n          </div>\n          <div className={s.content}>\n            <h2 className={s.name}>{title}</h2>\n            <p className={s.title}>User score: {vote_average * 10}%</p>\n            <ul className={s.list}>\n              <li>\n                <h3 className={s.name_over}>Overview</h3>\n                <p>{overview}</p>\n              </li>\n              <li className={s.item}>\n                <p className={s.text}>Genres</p>\n                <ul className={s.listGenras}>\n                  {genres?.map(({ name, id }) => (\n                    <li key={id}>{name}</li>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n            <p className={s.text}>Additional information</p>\n            <div className={s.coment}>\n              <ul className={s.listGenras}>\n                <li className={s.item_link}>\n                  <Link\n                    to={`${movies}/${params.movieId}/${cast}`}\n                    state={{ movies, from: location.state.from }}\n                    className={s.link}\n                  >\n                    Cast\n                  </Link>\n                </li>\n                <li>\n                  <Link\n                    to={`${movies}/${params.movieId}/${reviews}`}\n                    state={{ movies, from: location.state.from }}\n                    className={s.link}\n                  >\n                    Reviews\n                  </Link>\n                </li>\n              </ul>\n            </div>\n            <Outlet />\n          </div>\n        </>\n      ) : (\n        <p className={s.title_err}>Вибачте такий фільм не знайденно {err}</p>\n      )}\n    </>\n  );\n}\n\nexport default memo(MoviesId);\n"],"names":["cast","constans","reviews","movies","MoviesId","useState","post","setPost","err","setErr","location","useLocation","params","useParams","navigate","useNavigate","useEffect","FetchInformationMovies","movieId","then","res","catch","message","genres","vote_average","title","overview","poster_path","className","s","type","onClick","state","from","replace","src","alt","width","map","name","id","to","memo"],"sourceRoot":""}