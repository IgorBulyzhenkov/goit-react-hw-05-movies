{"version":3,"file":"static/js/Movies.3169db0a.chunk.js","mappings":"2PAKQA,EAAWC,EAAAA,EAAAA,OAEJ,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAsBJ,EAAAA,EAAAA,UAAS,IAA/B,eAAOK,EAAP,KAAYC,EAAZ,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,UAQpCC,EAAAA,EAAAA,YAAU,WACW,OAAfF,IACJG,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,SAAAC,GAAG,OAAIX,EAAcW,MAC1BC,OAAM,SAAAC,GAAK,OAAIX,EAAOW,EAAMC,cAC9B,CAACR,IAEJ,IAIQS,EAA2BhB,EAA3BgB,QAASC,EAAkBjB,EAAlBiB,cAEjB,OACE,iCACE,kBAAMC,SArBW,SAAAC,GACnBA,EAAEC,iBACFd,EAAgB,CAAEe,MAAOvB,IACzBC,EAAQ,KAkBN,WACE,kBAAOuB,KAAK,OAAOxB,KAAK,OAAOyB,MAAOzB,EAAM0B,SAT7B,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAChCxB,EAAQwB,EAAMG,YAUV,mBAAQJ,KAAK,SAAb,uBAEDN,GACC,wBACGA,EAAQW,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eAClB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKpC,EAAL,YAAekC,GACjBG,MAAO,CAAErC,OAAAA,EAAQsC,KAAK,iBAAD,OAAmBzB,IAF1C,SAIGsB,KALID,QAWb,KACe,IAAlBX,GAAsB,iMAAwC,KAC9Df,GAAM,8JAA6BA,KAAW,MAC/C,SAAC,KAAD","sources":["components/Movies/Movies.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Outlet, Link, useSearchParams } from 'react-router-dom';\nimport { FetchSearchMovie } from 'service/FetchMovies';\nimport { constans } from 'helpers/constans';\n\nconst { movies } = constans;\n\nexport default function Movies() {\n  const [name, setName] = useState('');\n  const [searchFilm, setSearchFilm] = useState({});\n  const [err, setErr] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const backSearch = searchParams.get('query');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: name });\n    setName('');\n  };\n\n  useEffect(() => {\n    if (backSearch === null) return;\n    FetchSearchMovie(backSearch)\n      .then(res => setSearchFilm(res))\n      .catch(error => setErr(error.message));\n  }, [backSearch]);\n\n  const handleChange = ({ target: { value } }) => {\n    setName(value.trim());\n  };\n\n  const { results, total_results } = searchFilm;\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n\n        <button type=\"submit\">Search</button>\n      </form>\n      {results ? (\n        <ul>\n          {results.map(({ id, original_title }) => {\n            return (\n              <li key={id}>\n                <Link\n                  to={`${movies}/${id}`}\n                  state={{ movies, from: `/movies?query=${backSearch}` }}\n                >\n                  {original_title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      ) : null}\n      {total_results === 0 ? <p>Введіть правильну назву фільма</p> : null}\n      {err ? <p>Такий фільм не знайденно {err}</p> : null}\n      <Outlet />\n    </>\n  );\n}\n"],"names":["movies","constans","Movies","useState","name","setName","searchFilm","setSearchFilm","err","setErr","useSearchParams","searchParams","setSearchParams","backSearch","get","useEffect","FetchSearchMovie","then","res","catch","error","message","results","total_results","onSubmit","e","preventDefault","query","type","value","onChange","target","trim","map","id","original_title","to","state","from"],"sourceRoot":""}