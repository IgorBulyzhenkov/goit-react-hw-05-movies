{"version":3,"file":"static/js/MoviesId.11c57155.chunk.js","mappings":"qNAWQA,EAA0BC,EAAAA,EAAAA,KAApBC,EAAoBD,EAAAA,EAAAA,QAAXE,EAAWF,EAAAA,EAAAA,OAElC,SAASG,IACP,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,UAAS,IAA/B,eAAOG,EAAP,KAAYC,EAAZ,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAuBL,EAAOM,SAC3BC,MAAK,SAAAC,GAAG,OAAIb,EAAQa,MACpBC,OAAM,SAAAb,GAAG,OAAIC,EAAOD,EAAIc,cAC1B,CAACV,EAAOM,UAEX,IAGQK,EAAuDjB,EAAvDiB,OAAQC,EAA+ClB,EAA/CkB,aAAcC,EAAiCnB,EAAjCmB,MAAOC,EAA0BpB,EAA1BoB,SAAUC,EAAgBrB,EAAhBqB,YAE/C,OACE,8BACInB,GAsDA,yMAAqCA,MArDrC,iCACE,mBAAQoB,KAAK,SAASC,QATV,WAClBf,EAASJ,EAASoB,MAAMC,KAAM,CAAEC,SAAS,KAQnC,sBAGA,4BACE,gBACEC,IACEN,EAAW,yCAC2BA,GAClC,uFAENO,IAAG,UAAKT,EAAL,qBAAuBA,EAAvB,iBACHU,MAAM,SAER,wBAAKV,KACL,wCAA+B,GAAfD,EAAhB,QACA,2BACE,2BACE,sCACA,uBAAIE,QAEN,oCAEE,+BACGH,QADH,IACGA,OADH,EACGA,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACX,wBAAcD,GAALC,eAKjB,mDACA,2BACE,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKpC,EAAL,YAAeS,EAAOM,QAAtB,YAAiClB,GACnC8B,MAAO,CAAE3B,OAAAA,EAAQ4B,KAAMrB,EAASoB,MAAMC,MAFxC,qBAOF,yBACE,SAAC,KAAD,CACEQ,GAAE,UAAKpC,EAAL,YAAeS,EAAOM,QAAtB,YAAiChB,GACnC4B,MAAO,CAAE3B,OAAAA,EAAQ4B,KAAMrB,EAASoB,MAAMC,MAFxC,2BAQJ,SAAC,KAAD,YAUZ,WAAeS,EAAAA,EAAAA,MAAKpC","sources":["components/Movies/MoviesId.js"],"sourcesContent":["import {\n  Outlet,\n  useLocation,\n  useParams,\n  useNavigate,\n  Link,\n} from 'react-router-dom';\nimport { useState, useEffect, memo } from 'react';\nimport { FetchInformationMovies } from 'service/FetchMovies';\nimport { constans } from 'helpers/constans';\n\nconst { cast, reviews, movies } = constans;\n\nfunction MoviesId() {\n  const [post, setPost] = useState([]);\n  const [err, setErr] = useState('');\n  const location = useLocation();\n  const params = useParams();\n  const navigate = useNavigate();\n\n\n  useEffect(() => {\n    FetchInformationMovies(params.movieId)\n      .then(res => setPost(res))\n      .catch(err => setErr(err.message));\n  }, [params.movieId]);\n\n  const handleClick = () => {\n    navigate(location.state.from, { replace: false });\n  };\n  const { genres, vote_average, title, overview, poster_path } = post;\n\n  return (\n    <>\n      {!err ? (\n        <>\n          <button type=\"button\" onClick={handleClick}>\n            Go back\n          </button>\n          <div>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://upload.wikimedia.org/wikipedia/commons/b/ba/No_image_available_400_x_600.svg'\n              }\n              alt={`${title} !== '' ? ${title} : 'No info!'`}\n              width=\"300\"\n            />\n            <h2>{title}</h2>\n            <p>User score: {vote_average * 10}%</p>\n            <ul>\n              <li>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n              </li>\n              <li>\n                Genres\n                <ul>\n                  {genres?.map(({ name, id }) => (\n                    <li key={id}>{name}</li>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link\n                  to={`${movies}/${params.movieId}/${cast}`}\n                  state={{ movies, from: location.state.from }}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to={`${movies}/${params.movieId}/${reviews}`}\n                  state={{ movies, from: location.state.from }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n            <Outlet />\n          </div>\n        </>\n      ) : (\n        <p>Вибачте такий фільм не знайденно {err}</p>\n      )}\n    </>\n  );\n}\n\nexport default memo(MoviesId);\n"],"names":["cast","constans","reviews","movies","MoviesId","useState","post","setPost","err","setErr","location","useLocation","params","useParams","navigate","useNavigate","useEffect","FetchInformationMovies","movieId","then","res","catch","message","genres","vote_average","title","overview","poster_path","type","onClick","state","from","replace","src","alt","width","map","name","id","to","memo"],"sourceRoot":""}