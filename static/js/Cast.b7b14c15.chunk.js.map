{"version":3,"file":"static/js/Cast.b7b14c15.chunk.js","mappings":"iMACA,GAAgB,KAAO,mBAAmB,KAAO,mBAAmB,IAAM,kBAAkB,KAAO,mBAAmB,UAAY,yB,uCCInH,SAASA,IACtB,IAAMC,GAASC,EAAAA,EAAAA,MACf,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,UAAS,IAA/B,eAAOG,EAAP,KAAYC,EAAZ,MAGAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBR,EAAOS,SACtBC,MAAK,SAAAC,GAAG,OAAIP,EAAQO,MACpBC,OAAM,SAAAP,GAAG,OAAIC,EAAOD,EAAIQ,cAC1B,CAACb,EAAOS,UAEX,IAAQK,EAASX,EAATW,KAER,OACE,iCACO,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,QAAS,GACd,+BACE,eAAIC,UAAWC,EAAAA,KAAf,SACGH,EAAKI,OAAO,EAAG,IAAIC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,GACxD,OACE,gBAAaP,UAAWC,EAAAA,KAAxB,WACE,gBACEO,IACEF,EAAY,yCAC0BA,GAClC,uFAENG,IAAKJ,EACLK,MAAM,MACNC,OAAO,MACPX,UAAWC,EAAAA,OAEb,eAAID,UAAWC,EAAAA,MAAf,SAAyBI,KACzB,eAAGL,UAAWC,EAAAA,KAAd,WACE,iBAAMD,UAAWC,EAAAA,KAAjB,wBADF,KAC+CG,OAdxCG,WAsBjB,cAAGP,UAAWC,EAAAA,UAAd,uMA5BJ,OA8BGZ,QA9BH,IA8BGA,EAAAA,GACC,eAAGW,UAAWC,EAAAA,UAAd,sMAA+DZ","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Cast/Cast.module.css?5057","components/Movies/Cast/Cast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__Sr0Fx\",\"item\":\"Cast_item__QRBYd\",\"img\":\"Cast_img__h5hFr\",\"span\":\"Cast_span__C+PK7\",\"title_err\":\"Cast_title_err__Nzuqt\"};","import s from './Cast.module.css';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { FetchCreditsMovie } from 'service/FetchMovies';\n\nexport default function Cast() {\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [err, setErr] = useState('');\n\n\n  useEffect(() => {\n    FetchCreditsMovie(params.movieId)\n      .then(res => setPost(res))\n      .catch(err => setErr(err.message));\n  }, [params.movieId]);\n\n  const { cast } = post;\n\n  return (\n    <>\n      {cast?.length > 0 ? (\n        <>\n          <ul className={s.list}>\n            {cast.splice(0, 20).map(({ character, name, profile_path, id }) => {\n              return (\n                <li key={id} className={s.item}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                        : 'https://upload.wikimedia.org/wikipedia/commons/b/ba/No_image_available_400_x_600.svg'\n                    }\n                    alt={name}\n                    width=\"208\"\n                    height=\"300\"\n                    className={s.img}\n                  />\n                  <h3 className={s.title}>{name}</h3>\n                  <p className={s.text}>\n                    <span className={s.span}>Character </span>: {character}\n                  </p>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      ) : (\n        <p className={s.title_err}>Вибачте таких акторів не знайденно </p>\n      )}\n      {err ?? (\n        <p className={s.title_err}>Вибачте таких акторів не знайденно {err}</p>\n      )}\n    </>\n  );\n}\n"],"names":["Cast","params","useParams","useState","post","setPost","err","setErr","useEffect","FetchCreditsMovie","movieId","then","res","catch","message","cast","length","className","s","splice","map","character","name","profile_path","id","src","alt","width","height"],"sourceRoot":""}